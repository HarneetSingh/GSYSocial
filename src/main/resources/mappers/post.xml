<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.motionapps.GSYSocial.dao.PostDao">

	<resultMap id="postMap" type="Post">
		<id column="post_id" property="postId" />
		<result column="account_id" property="accountId" />
		<result column="account_type" property="accountType" />
		<result column="file_url" property="fileUrl" />
		<result column="file_type" property="fileType" />
		<result column="post_text" property="postText" />
		<result column="rating_value_sad" property="ratingValueSad" />
		<result column="rating_value_ok" property="ratingValueOk" />
		<result column="rating_value_happy" property="ratingValueHappy" />
		<result column="created_time" property="createdTime" />
		<result column="last_updated_time" property="lastUpdatedTime" />
		<result column="user_id" property="userId" />
		<result column="thumb_nail_url" property="thumbNameUrl" />
		<result column="comment_count" property="commentCount" />

	</resultMap>


	<!-- ************** CREATE ************** -->
	<insert id="createPost" parameterType="Post" useGeneratedKeys="true">
		INSERT
		INTO post
		SET
		post_id = #{postId},
		account_id =
		#{accountId},
		account_type=#{accountType},
		file_url = #{fileUrl},
		file_type =
		#{fileType},
		post_text = #{postText},
		user_id = #{userId},
		thumb_nail_url=
		#{thumbNameUrl},
		last_updated_time=now(),
		created_time=now();
	</insert>

	<!-- ************** READ ************** -->
	<select id="getPostByJointAccount" parameterType="String"
		resultMap="postMap">
		SELECT
		post_id,
		account_id,
		account_type,
		file_url,
		file_type,
		thumb_nail_url,
		post_text,
		user_id,
		comment_count,
		rating_value_sad,
		rating_value_ok,
		rating_value_happy,
		created_time,
		last_updated_time
		FROM
		post
		WHERE
		account_id=#{value}
		ORDER BY
		created_time desc;
	</select>

	<select id="getPostById" parameterType="String" resultMap="postMap">
		SELECT
		post_id,
		account_id,
		account_type,
		file_url,
		file_type,
		thumb_nail_url,
		post_text,
		user_id,
		comment_count,
		rating_value_sad,
		rating_value_ok,
		rating_value_happy,
		created_time,
		last_updated_time
		FROM
		post
		WHERE
		post_id=#{value}
	</select>

	<select id="getPostForUser" parameterType="String" resultMap="postMap">
		SELECT
		post.post_id,
		post.account_id,
		post.account_type,
		post.file_url,
		post.file_type,
		post.thumb_nail_url,
		post.post_text,
		post.user_id,
		post.comment_count,
		post.rating_value_sad,
		post.rating_value_ok,
		post.rating_value_happy,
		post.created_time,
		post.last_updated_time
		FROM
		post
		INNER JOIN
		follower
		ON
		post.account_id=follower.account_id
		AND
		follower.user_id=#{value}
		ORDER
		BY
		post.created_time desc;
	</select>

	<select id="getAllPosts" parameterType="String" resultMap="postMap">
		SELECT
		post_id,
		account_id,
		account_type,
		file_url,
		file_type,
		user_id,
		thumb_nail_url,
		post_text,
		comment_count,
		rating_value_sad,
		rating_value_ok,
		rating_value_happy,
		created_time,
		last_updated_time
		FROM
		post;
	</select>

	<!-- ************** UPDATE ************** -->

	<update id="updatePost" parameterType="Post">
		UPDATE
		post
		SET
		post_id = #{postId}
		<if test="fileUrl != null">
			,file_url = #{fileUrl}
			,last_updated_time=now()
		</if>
		<if test="fileType != null">
			,file_type = #{fileType}
			,last_updated_time=now()
		</if>
		<if test="postText != null">
			,post_text = #{postText}
			,last_updated_time=now()
		</if>
		<if test="thumbNameUrl != null">
			,thumb_nail_url = #{thumbNameUrl}
			,last_updated_time=now()
		</if>
		WHERE
		post_id = #{postId}
	</update>

	<update id="addRating" parameterType="Post">
		UPDATE
		post
		SET
		post_id = #{postId}
		<if test="newRating != null">
			<if test="newRating == 0">
				,rating_value_sad=rating_value_sad+1
			</if>
			<if test="newRating == 1">
				,rating_value_ok=rating_value_ok+1
			</if>
			<if test="newRating == 2">
				,rating_value_happy=rating_value_happy+1
			</if>
			,last_updated_time=now()
		</if>
		WHERE
		post_id = #{postId}
	</update>

	<update id="deleteRating" parameterType="Post">
		UPDATE
		post
		SET
		post_id = #{postId}
		<if test="newRating != null">
			<if test="newRating == 0">
				,rating_value_sad=rating_value_sad-1
			</if>
			<if test="newRating == 1">
				,rating_value_ok=rating_value_ok-1
			</if>
			<if test="newRating == 2">
				,rating_value_happy=rating_value_happy-1
			</if>
			,last_updated_time=now()
		</if>
		WHERE
		post_id = #{postId}
	</update>

	<update id="updateRating" parameterType="Post">
		UPDATE
		post
		SET
		post_id = #{postId}
		<if test="newRating != null">
			,total_rating=total_rating + #{newRating}
			,last_updated_time=now()
		</if>
		WHERE
		post_id = #{postId}
	</update>

	<update id="incrementCommentCount" parameterType="String">
		UPDATE
		post
		SET
		comment_count = comment_count + 1
		WHERE
		post_id=#{value}
	</update>

	<update id="decrementCommentCount" parameterType="String">
		UPDATE
		post
		SET
		comment_count = comment_count - 1
		WHERE
		post_id=#{value}
	</update>

	<!-- ************** DELETE ************** -->

	<delete id="deletePost" parameterType="String">
		DELETE FROM post WHERE
		post_id = #{value}
	</delete>


</mapper>